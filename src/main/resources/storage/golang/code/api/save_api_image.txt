func Save?uService(ctx *gin.Context, dto dto.?uRequest) (model.?u) {
	tx := database.DB.Begin()
	tx.WithContext(ctx)

	var ?lDetails model.?u

	// Fetch ?swag by ID if it exists
	if dto.ID != uuid.Nil {
		?lDetails := ?snake_navigator.Find?uByIdService(dto.ID)
	}

	// Convert the incoming DTO to ?swag model
	dto_utils.DtoConvertErrorHandled(dto, &?lDetails)

	// Handle ?swag image if provided
	if dto.FileId != uuid.Nil {
		?lPic := temporary_attachments.FindByIdService(dto.FileId)
		?lFilePath := utils.CopyFileToServer(?lPic.Location, project_module.ModuleNameEnums.LICENSE_FRONT, global_var.ForBucket)
		?lDetails.ImagePath = &?lFilePath
	}

	// Save or update the ?swag details
	var saved?u model.?u
	var save?uError error
	if dto.ID == uuid.Nil {
		saved?u, save?uError = generic_repo.SaveRepo(tx, ?lDetails)
	} else {
		saved?u, save?uError = generic_repo.UpdateRepo(tx, ?lDetails)
	}

	// Handle any save or update errors
	if save?uError != nil {
		tx.Rollback()
		panic(save?uError)
	}

	return saved?u // Successfully return the saved ?swag
}