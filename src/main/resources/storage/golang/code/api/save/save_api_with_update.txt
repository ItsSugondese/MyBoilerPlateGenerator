func Save?uService(ctx *gin.Context, dto dto.?uRequest) model.?u {
	tx := database.DB.Begin()
	tx.WithContext(ctx)

	var ?lDetails model.?u

	if dto.ID != uuid.Nil {
		?lDetails = ?snake_navigator.Find?uByIdService(dto.ID)
	}

	dto_utils.DtoConvertErrorHandled(dto, &?lDetails)

	var saved?u model.?u
	var save?uError error

	if dto.ID == uuid.Nil {
		saved?u, save?uError = generic_repo.SaveRepo(tx, ?lDetails)
	} else {
		saved?u, save?uError = generic_repo.UpdateRepo(tx, ?lDetails)
	}

	if save?uError != nil {
		tx.Rollback()
		panic(save?uError)
	}

	if err := tx.Commit().Error; err != nil {
		tx.Rollback()
		panic(err)
	}

	return saved?u
}