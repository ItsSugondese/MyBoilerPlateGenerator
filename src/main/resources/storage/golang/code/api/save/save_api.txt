func Save?uService(ctx *gin.Context, dto dto.?uRequest) model.?u {
	tx := database.DB.Begin()
	tx.WithContext(ctx)

	var ?lDetails model.?u

	// Convert the incoming DTO to ?swag model
	dto_utils.DtoConvertErrorHandled(dto, &?lDetails)

	saved?u, save?uError := generic_repo.SaveRepo(tx, ?lDetails)

	// Handle any save or update errors
	if save?uError != nil {
		tx.Rollback()
		panic(save?uError)
	}

	// Commit the transaction
	if err := tx.Commit().Error; err != nil {
		panic(err)
	}

	return saved?u // Successfully return the saved ?swag
}